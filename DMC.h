#ifndef DMC_H
#define DMC_H

#include "Map.h"

#define FLOSS_COUNT 360

static struct kv_pair DMC_flosses[FLOSS_COUNT] = 
{
kv_pair{0xFFFFFF , 000},
kv_pair{0x945B80, 208},
kv_pair{0xCE94BA, 209},
kv_pair{0xECCFE1, 210},
kv_pair{0xF3DAE4, 211},
kv_pair{0x9C294A, 221},
kv_pair{0xDB8073, 223},
kv_pair{0xFFC7B0, 224},
kv_pair{0xFFF0E4, 225},
kv_pair{0x8F3926, 300},
kv_pair{0xD16654, 301},
kv_pair{0xBC0061, 304},
kv_pair{0xFFE76D, 307},
kv_pair{0xD62B5B, 309},
kv_pair{0x000000, 310},
kv_pair{0x004F61, 311},
kv_pair{0x3A5467, 312},
kv_pair{0xA35A5B, 315},
kv_pair{0xDC8D8D, 316},
kv_pair{0xA78B88, 317},
kv_pair{0xC5C6BE, 318},
kv_pair{0x555F52, 319},
kv_pair{0x8A9978, 320},
kv_pair{0xE71261, 321},
kv_pair{0x516D87, 322},
kv_pair{0xBC1641, 326},
kv_pair{0x3D0067, 327},
kv_pair{0x7F5482, 333},
kv_pair{0x738CAA, 334},
kv_pair{0xDB244F, 335},
kv_pair{0x244967, 336},
kv_pair{0xA279A4, 340},
kv_pair{0x91B4C5, 341},
kv_pair{0xC22443, 347},
kv_pair{0xDC3D5B, 349},
kv_pair{0xED455A, 350},
kv_pair{0xFF8087, 351},
kv_pair{0xFF9D90, 352},
kv_pair{0xFFC4B8, 353},
kv_pair{0xBD492F, 355},
kv_pair{0xE2725B, 356},
kv_pair{0x5F705B, 367},
kv_pair{0xB5CEA2, 368},
kv_pair{0xF3FAD1, 369},
kv_pair{0xB88A57, 370},
kv_pair{0xC49B64, 371},
kv_pair{0xCBA26B, 372},
kv_pair{0x9D3C27, 400},
kv_pair{0xFFBEA4, 402},
kv_pair{0xC2654C, 407},
kv_pair{0x6D5F5F, 413},
kv_pair{0xA78B88, 414},
kv_pair{0xDDDDDA, 415},
kv_pair{0x8C5B2B, 420},
kv_pair{0xEDAC7B, 422},
kv_pair{0x975414, 433},
kv_pair{0xB26746, 434},
kv_pair{0xBB6B39, 435},
kv_pair{0xE79873, 436},
kv_pair{0xEEAB79, 437},
kv_pair{0xFFB000, 444},
kv_pair{0xFFFFBE, 445},
kv_pair{0xB3978F, 451},
kv_pair{0xD2B9AF, 452},
kv_pair{0xEBCFB9, 453},
kv_pair{0x74725C, 469},
kv_pair{0x858F6C, 470},
kv_pair{0xB0BB8C, 471},
kv_pair{0xEEFFB6, 472},
kv_pair{0xBB0061, 498},
kv_pair{0x2B3929, 500},
kv_pair{0x435549, 501},
kv_pair{0x869E86, 502},
kv_pair{0xC3CEB7, 503},
kv_pair{0xCEDDC1, 504},
kv_pair{0x107F87, 517},
kv_pair{0x66949A, 518},
kv_pair{0xC2D1CF, 519},
kv_pair{0x374912, 520},
kv_pair{0x9FA98E, 522},
kv_pair{0xACB78E, 523},
kv_pair{0xCDB69E, 524},
kv_pair{0x555559, 535},
kv_pair{0xEFD6BC, 543},
kv_pair{0x6D1261, 550},
kv_pair{0x925582, 552},
kv_pair{0xA06492, 553},
kv_pair{0xF3CEE1, 554},
kv_pair{0x3B604C, 561},
kv_pair{0x618661, 562},
kv_pair{0xB6D4B4, 563},
kv_pair{0xD6E6CC, 564},
kv_pair{0x006700, 580},
kv_pair{0x979831, 581},
kv_pair{0x809784, 597},
kv_pair{0xD0DFCD, 598},
kv_pair{0xD0396A, 600},
kv_pair{0xDE3969, 601},
kv_pair{0xE7547A, 602},
kv_pair{0xFF738C, 603},
kv_pair{0xFFBDCA, 604},
kv_pair{0xFFCFD6, 605},
kv_pair{0xFF0000, 606},
kv_pair{0xFF5B00, 608},
kv_pair{0x976854, 610},
kv_pair{0x9E6D5B, 611},
kv_pair{0xCB9867, 612},
kv_pair{0xDBB07A, 613},
kv_pair{0xA24D34, 632},
kv_pair{0xA3A39D, 640},
kv_pair{0xAEB0AA, 642},
kv_pair{0xE0E0D7, 644},
kv_pair{0x717171, 645},
kv_pair{0x797979, 646},
kv_pair{0xBEBEB9, 647},
kv_pair{0xCACACA, 648},
kv_pair{0xD52756, 666},
kv_pair{0xFFCE9E, 676},
kv_pair{0xFFE7B6, 677},
kv_pair{0xD18C67, 680},
kv_pair{0x005B06, 699},
kv_pair{0x00602F, 700},
kv_pair{0x4F6C45, 701},
kv_pair{0x4F7942, 702},
kv_pair{0x79904C, 703},
kv_pair{0xA5A467, 704},
kv_pair{0xF5F0DB, 712},
kv_pair{0xDB3779, 718},
kv_pair{0xC8242B, 720},
kv_pair{0xFF7361, 721},
kv_pair{0xFF926D, 722},
kv_pair{0xFFC87C, 725},
kv_pair{0xFFE080, 726},
kv_pair{0xFFEBA8, 727},
kv_pair{0xF3B080, 729},
kv_pair{0x846600, 730},
kv_pair{0x8C6700, 731},
kv_pair{0x916800, 732},
kv_pair{0xCE9B61, 733},
kv_pair{0xDDA66B, 734},
kv_pair{0xF4C38B, 738},
kv_pair{0xF4E9CA, 739},
kv_pair{0xFF8313, 740},
kv_pair{0xFF8E04, 741},
kv_pair{0xFFB755, 742},
kv_pair{0xFFE692, 743},
kv_pair{0xFFEFAA, 744},
kv_pair{0xFFF0C5, 745},
kv_pair{0xF6EADB, 746},
kv_pair{0xF0F7EF, 747},
kv_pair{0xFBE3D1, 754},
kv_pair{0xFFB193, 758},
kv_pair{0xF9A092, 760},
kv_pair{0xFFC9BC, 761},
kv_pair{0xE8E8E5, 762},
kv_pair{0xE7F9CB, 772},
kv_pair{0xF7F6F8, 775},
kv_pair{0xFFB1AE, 776},
kv_pair{0xFFC7B8, 778},
kv_pair{0xB5622E, 780},
kv_pair{0xB56B38, 781},
kv_pair{0xCC7742, 782},
kv_pair{0xE19255, 783},
kv_pair{0x47375D, 791},
kv_pair{0x616180, 792},
kv_pair{0x938BA4, 793},
kv_pair{0xBBD0DA, 794},
kv_pair{0x1E3A5F, 796},
kv_pair{0x1E4263, 797},
kv_pair{0x67738D, 798},
kv_pair{0x849CB6, 799},
kv_pair{0xE9EEE9, 800},
kv_pair{0x7B4714, 801},
kv_pair{0x1E8285, 806},
kv_pair{0x80A7A0, 807},
kv_pair{0xBEC1CD, 809},
kv_pair{0xAFC3CD, 813},
kv_pair{0xA20058, 814},
kv_pair{0xA6005B, 815},
kv_pair{0xB3005B, 816},
kv_pair{0xDB1855, 817},
kv_pair{0xFFEAEB, 818},
kv_pair{0xF8F7DD, 819},
kv_pair{0x1E3655, 820},
kv_pair{0xF2EADB, 822},
kv_pair{0x000049, 823},
kv_pair{0x476174, 824},
kv_pair{0x556C80, 825},
kv_pair{0x738A99, 826},
kv_pair{0xD5E7E8, 827},
kv_pair{0xEDF7EE, 828},
kv_pair{0x825A08, 829},
kv_pair{0x885F12, 830},
kv_pair{0x906712, 831},
kv_pair{0xB27737, 832},
kv_pair{0xDBB680, 833},
kv_pair{0xF2D18E, 834},
kv_pair{0x5E381B, 838},
kv_pair{0x6D4227, 839},
kv_pair{0x80551E, 840},
kv_pair{0xBC866B, 841},
kv_pair{0xDBC2A4, 842},
kv_pair{0x6B6766, 844},
kv_pair{0x995C30, 868},
kv_pair{0x995C30, 869},
kv_pair{0x4F564C, 890},
kv_pair{0xF13154, 891},
kv_pair{0xF95A61, 892},
kv_pair{0xF3959D, 893},
kv_pair{0xFFC2BF, 894},
kv_pair{0x595C4E, 895},
kv_pair{0x763713, 898},
kv_pair{0xE96D73, 899},
kv_pair{0xCE2B00, 900},
kv_pair{0x8A184D, 902},
kv_pair{0x4E5F39, 904},
kv_pair{0x627739, 905},
kv_pair{0x8FA359, 906},
kv_pair{0xB9C866, 907},
kv_pair{0x316955, 909},
kv_pair{0x30745B, 910},
kv_pair{0x318061, 911},
kv_pair{0x739E73, 912},
kv_pair{0x99BC95, 913},
kv_pair{0xAA185B, 915},
kv_pair{0xAB165F, 917},
kv_pair{0xA8444C, 918},
kv_pair{0xB44B52, 919},
kv_pair{0xC55E58, 920},
kv_pair{0xCE675B, 921},
kv_pair{0xED8673, 922},
kv_pair{0x566364, 924},
kv_pair{0x607473, 926},
kv_pair{0xC8C6C2, 927},
kv_pair{0xE1E0D8, 928},
kv_pair{0x667A8C, 930},
kv_pair{0x7C8791, 931},
kv_pair{0xB6BAC2, 932},
kv_pair{0x3E3B28, 934},
kv_pair{0x433F2F, 935},
kv_pair{0x454531, 936},
kv_pair{0x495637, 937},
kv_pair{0x632710, 938},
kv_pair{0x000031, 939},
kv_pair{0x00A275, 943},
kv_pair{0xFFCEA4, 945},
kv_pair{0xF44900, 946},
kv_pair{0xFF5B00, 947},
kv_pair{0xFFF3E7, 948},
kv_pair{0xEFA27F, 950},
kv_pair{0xFFE5BC, 951},
kv_pair{0xAAD5A4, 954},
kv_pair{0xD6E6CC, 955},
kv_pair{0xFF6D73, 956},
kv_pair{0xFFCCD0, 957},
kv_pair{0x00A082, 958},
kv_pair{0xABCEB1, 959},
kv_pair{0xF36C7B, 961},
kv_pair{0xFD868D, 962},
kv_pair{0xFFE9E9, 963},
kv_pair{0xD0E0D2, 964},
kv_pair{0xCED5B0, 966},
kv_pair{0xFF7518, 970},
kv_pair{0xFF6A00, 971},
kv_pair{0xFF9200, 972},
kv_pair{0xFFC243, 973},
kv_pair{0x9E4312, 975},
kv_pair{0xF68D39, 976},
kv_pair{0xFFA449, 977},
kv_pair{0x3A5241, 986},
kv_pair{0x536149, 987},
kv_pair{0x86916E, 988},
kv_pair{0x86996E, 989},
kv_pair{0x2F5B49, 991},
kv_pair{0x92B7A5, 992},
kv_pair{0xC0E0C8, 993},
kv_pair{0x007B86, 995},
kv_pair{0xAADEE1, 996},
kv_pair{0x7B5B40, 3011},
kv_pair{0xAA8667, 3012},
kv_pair{0xD0C3A4, 3013},
kv_pair{0x735B5D, 3021},
kv_pair{0xACACAA, 3022},
kv_pair{0xC6BEAD, 3023},
kv_pair{0xD2D0CD, 3024},
kv_pair{0x543817, 3031},
kv_pair{0xBC9C78, 3032},
kv_pair{0xEFDBBE, 3033},
kv_pair{0xBE9BA7, 3041},
kv_pair{0xE1CDC8, 3042},
kv_pair{0xD89769, 3045},
kv_pair{0xE5C18B, 3046},
kv_pair{0xFFECD3, 3047},
kv_pair{0x554900, 3051},
kv_pair{0x898D72, 3052},
kv_pair{0xBBB394, 3053},
kv_pair{0xC2654C, 3064},
kv_pair{0xE9E9DF, 3072},
kv_pair{0xFFFFDC, 3078},
kv_pair{0xCAE2E5, 3325},
kv_pair{0xFF9D96, 3326},
kv_pair{0xBC4055, 3328},
kv_pair{0xFF7B67, 3340},
kv_pair{0xEBACA2, 3341},
kv_pair{0x616452, 3345},
kv_pair{0x78866B, 3346},
kv_pair{0x809873, 3347},
kv_pair{0xE1F9BE, 3348},
kv_pair{0xC94F5B, 3350},
kv_pair{0xFFD6D1, 3354},
kv_pair{0x605F54, 3362},
kv_pair{0x747F60, 3363},
kv_pair{0xA1A787, 3364},
kv_pair{0x532510, 3371},
kv_pair{0xE74F86, 3607},
kv_pair{0xF798B6, 3608},
kv_pair{0xFFD6E5, 3609},
kv_pair{0xA1354F, 3685},
kv_pair{0xCB4E61, 3687},
kv_pair{0xFA9790, 3688},
kv_pair{0xFFD5D8, 3689},
kv_pair{0xFF555B, 3705},
kv_pair{0xFF806D, 3706},
kv_pair{0xFED4DB, 3708},
kv_pair{0xE6656B, 3712},
kv_pair{0xFDE5D9, 3713},
kv_pair{0xFFD3D4, 3716},
kv_pair{0xB84B4D, 3721},
kv_pair{0xB85958, 3722},
kv_pair{0xC3767B, 3726},
kv_pair{0xFFC7C4, 3727},
kv_pair{0xD15D67, 3731},
kv_pair{0xFF9A94, 3733},
kv_pair{0x9C7D85, 3740},
kv_pair{0xEBEBE7, 3743},
kv_pair{0x9566A2, 3746},
kv_pair{0xE6ECE8, 3747},
kv_pair{0x0C5B6C, 3750},
kv_pair{0xC2D1CE, 3752},
kv_pair{0xEDF7F7, 3753},
kv_pair{0x9EB0CE, 3755},
kv_pair{0xF8F8FC, 3756},
kv_pair{0x668E98, 3760},
kv_pair{0xE3EAE6, 3761},
kv_pair{0x188086, 3765},
kv_pair{0x18656F, 3766},
kv_pair{0x5C6E6C, 3768},
kv_pair{0xFFFAE0, 3770},
kv_pair{0xAD533E, 3772},
kv_pair{0xE78667, 3773},
kv_pair{0xFFDCC1, 3774},
kv_pair{0xDD6D5B, 3776},
kv_pair{0xBF4024, 3777},
kv_pair{0xED7A64, 3778},
kv_pair{0xFFB198, 3779},
kv_pair{0x71472A, 3781},
kv_pair{0xCEAF90, 3782},
kv_pair{0x8B6D73, 3787},
kv_pair{0x8C756D, 3790},
kv_pair{0x514C53, 3799}
};
struct rb_tree* create_DMC_floss_map();

#endif
